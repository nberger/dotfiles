" All system-wide defaults are set in $VIMRUNTIME/debian.vim (usually just
" /usr/share/vim/vimcurrent/debian.vim) and sourced by the call to :runtime
" you can find below.  If you wish to change any of those settings, you should
" do it in this file (/etc/vim/vimrc), since debian.vim will be overwritten
" everytime an upgrade of the vim packages is performed.  It is recommended to
" make changes after sourcing debian.vim since it alters the value of the
" 'compatible' option.

" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages available in Debian.
runtime! debian.vim

" Leader
let mapleader = "-"

" Uncomment the next line to make Vim more Vi-compatible
" NOTE: debian.vim sets 'nocompatible'.  Setting 'compatible' changes numerous
" options, so any other options should be set AFTER setting 'compatible'.
set nocompatible

" Uncomment the following to have Vim jump to the last position when
" reopening a file
if has("autocmd")
  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
    \| exe "normal g'\"" | endif
endif

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required!
Bundle 'VundleVim/Vundle.vim'

" My Bundles here:
"
Bundle 'tpope/vim-fugitive'
Bundle 'tpope/vim-rhubarb'
Bundle 'kchmck/vim-coffee-script'
Bundle 'gregsexton/gitv'
Bundle 'scrooloose/nerdtree'
Bundle 'tpope/vim-ragtag'
Bundle 'tpope/vim-endwise'
Bundle 'tpope/vim-haml'
Bundle 'slim-template/vim-slim'
Bundle 'vim-scripts/matchit.zip'
Bundle 'altercation/vim-colors-solarized'
Bundle 'bling/vim-airline'
Bundle 'junegunn/fzf.vim'
Bundle 'tpope/vim-commentary'

" ruby
Bundle 'tpope/vim-bundler'
Bundle 'tpope/vim-rails'
Bundle 'gabebw/vim-spec-runner'
Bundle 'jpalardy/vim-slime'
Bundle 'jgdavey/tslime.vim'
Bundle 'AlexParamonov/vim-ruby-refactoring'

" clojure
Bundle 'kien/rainbow_parentheses.vim'
Bundle 'tpope/vim-fireplace'
Bundle 'vim-scripts/paredit.vim'
"Bundle 'tpope/vim-leiningen'
Bundle 'tpope/vim-projectionist'
Bundle 'guns/vim-clojure-static'
Bundle 'guns/vim-slamhound'

" python
Bundle 'klen/python-mode'
"Bundle 'davidhalter/jedi-vim'
Bundle 'mindriot101/vim-pytest-runner'

" solidity
Bundle 'tomlion/vim-solidity'

" js
Bundle 'pangloss/vim-javascript'
Bundle 'mxw/vim-jsx'

syntax on
filetype off

" Uncomment the following to have Vim load indentation rules according to the
" detected filetype. Per default Debian Vim only load filetype specific
" plugins.
if has("autocmd")
  filetype on
  filetype indent on
  filetype plugin on
endif


" The following are commented out as they cause vim to behave a lot
" differently from regular Vi. They are highly recommended though.
set showcmd		" Show (partial) command in status line.
set showmatch	" Show matching brackets.
set ignorecase	" Do case insensitive matching
set smartcase	" Do smart case matching
set incsearch	" Incremental search
"set autowrite	" Automatically save before commands like :next and :make
set hidden      " Hide buffers when they are abandoned
set mouse=a		" Enable mouse usage (all modes) in terminals
set ruler       " show the cursor position all the time
set hlsearch    " Switch syntax highlighting on
set autoread    " Auto load file when updated outside vim
set guifont=Andale\ Mono\ 10
set number

set background=dark
colorscheme desert256

set mousehide	" Hide the mouse when typing text
set noerrorbells
set novisualbell
set vb t_vb=

" force disable bell, some issue with GVIM or (http://stackoverflow.com/a/18589653)
autocmd GUIEnter * set vb t_vb=

set expandtab
set shiftwidth=2
set tabstop=2

set nowrap

" do not create *.ext~ files
set nobackup
set nowritebackup

" cycle windows using Alt-arrows
nmap <silent> <A-Up> :wincmd k<CR>
nmap <silent> <A-Down> :wincmd j<CR>
nmap <silent> <A-Left> :wincmd h<CR>
nmap <silent> <A-Right> :wincmd l<CR>

" cycle buffern using Ctrl-N and Ctrl-P
nmap <silent> <C-N> :bn <CR>
nmap <silent> <C-P> :bp <CR>

" make search results appear in the middle of the screen
nmap n nzz
nmap N Nzz
nmap * *zz
nmap # #zz
nmap g* g*zz
nmap g# g#zz

if has("multi_byte")
  set encoding=utf-8
  setglobal fileencoding=utf-8
  " set bomb
  set termencoding=utf-8
  set fileencodings=utf-8,iso-8859-1,iso-8859-3
else
  echoerr "Sorry, this version of (g)vim was not compiled with +multi_byte"
endif

" Activate git commit syntax highlighting
if has("autocmd")
  autocmd BufNewFile,BufRead COMMIT_EDITMSG set filetype=gitcommit
endif

" Make the unnamed clipboard match the X clipboard
if has("unnamedplus")
  set clipboard=unnamedplus
endif

" Highlight redundant whitespace and tabs.
highlight RedundantWhitespace ctermbg=red guibg=red
match RedundantWhitespace /\s\+$\| \+\ze\t/

" Typos
map                :W :w
map                :WQ :wq
map                :Wq :wq
map                :Q :q

:set noswapfile

:set guioptions-=T  "remove toolbar

" Smart way to move btw. windows
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

set wildmenu

" clean whitespaces at end of line
map cleanws :%s/\s\+$//g<CR>

"set fdm=syntax

nnoremap <F1> <nop>
nnoremap Q <nop>
"nnoremap K <nop>

" global substitute by default
set gdefault

" auto-source .vimrc
autocmd! bufwritepost .vimrc source %

" Add fzf to runtime path
if filereadable("/usr/local/opt/fzf")
  set rtp+=/usr/local/opt/fzf
else
  set rtp+=~/.fzf
endif

" use fzf for files and buffers
silent! nnoremap <unique> <silent> <Leader>t :Files<CR>
silent! nnoremap <unique> <silent> ; :Buffers<CR>

" Disable Arrow keys in Escape mode
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>

" vim-slime
let g:slime_target = "tmux"
let g:slime_paste_file = "$HOME/.slime_paste"
